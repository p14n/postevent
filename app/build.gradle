plugins {
    id 'application'
}

compileJava {
    sourceCompatibility = 21
    targetCompatibility = 21
}

group = 'com.p14n'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':library')
    implementation 'io.opentelemetry:opentelemetry-sdk:1.32.0'
    implementation 'io.opentelemetry:opentelemetry-api:1.32.0'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-grpc-1.6:1.32.0-alpha'
    implementation 'io.grpc:grpc-api:1.53.0'
    implementation 'ch.qos.logback:logback-classic:1.4.12'

    // Exporters - choose based on your needs
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.32.0'
    implementation("io.opentelemetry.instrumentation:opentelemetry-jdbc:1.32.0-alpha")

    //implementation 'software.amazon.opentelemetry:aws-opentelemetry-agent:latest-version'


}

jar {
    manifest {
        attributes 'Main-Class': 'com.p14n.postevent.App'
    }
}

task uberJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.p14n.postevent.App'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveBaseName.set("${project.name}-uber")
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}


task runHelloWorld(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.p14n.postevent.App'
}
