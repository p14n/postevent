import com.vanniktech.maven.publish.SonatypeHost
import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar

plugins {
    id 'java'
    id 'com.adarshr.test-logger' version '4.0.0'
    id 'com.google.protobuf' version '0.9.2'
    id "com.vanniktech.maven.publish" version "0.31.0"
}

compileJava {
    sourceCompatibility = 21
    targetCompatibility = 21
}

group = 'com.p14n'
version = '1.3.0'

repositories {
    mavenCentral()
}

dependencies {
    // Dependency on core module
    implementation project(':core')
    implementation project(':debezium')

    // gRPC dependencies
    implementation 'io.grpc:grpc-netty-shaded:1.53.0'
    implementation 'io.grpc:grpc-protobuf:1.53.0'
    implementation 'io.grpc:grpc-stub:1.53.0'
    implementation 'io.grpc:grpc-api:1.53.0'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    
    // For code generation
    implementation 'com.google.protobuf:protobuf-java:3.21.7'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'

    // Security constraint
    constraints {
        implementation 'com.google.guava:guava:32.0.0-jre'
    }

    // Instrumentation for GRPC
    implementation 'io.opentelemetry.instrumentation:opentelemetry-grpc-1.6:1.32.0-alpha'
    
    // Test dependencies
    testImplementation project(path: ':core', configuration: 'tests')
    testImplementation 'net.jqwik:jqwik:1.8.2'
    testImplementation platform('io.zonky.test.postgres:embedded-postgres-binaries-bom:16.2.0')
    testImplementation 'io.zonky.test:embedded-postgres:2.0.7'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testRuntimeOnly 'ch.qos.logback:logback-classic:1.4.11'
    testImplementation 'org.mockito:mockito-core:3.12.4'
}

testlogger {
    theme 'standard'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
}

test {
    useJUnitPlatform {
        includeEngines 'jqwik', 'junit-jupiter'
    }
    maxHeapSize = "1G"
    minHeapSize = "512M"
    maxParallelForks = 1
    failFast = true
    testLogging.showStandardStreams = true
}

task fastTest( type: Test ) {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
        exclude '**/dst/**'

    }
}
// Configure Protobuf plugin
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.7'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.53.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

jar {
    manifest {
    }
}

tasks.withType(Jar) {
   duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

javadoc {
  exclude "**/grpc/**"
  source = sourceSets.main.allJava
}

mavenPublishing {
 
  configure(new JavaLibrary(new JavadocJar.Javadoc(), true))

  publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL, true)

  signAllPublications()

  coordinates("com.p14n", "postevent", version)
  
  pom {
    name = "Postevent"
    description = 'A reliable event publishing and consumption system using PostgreSQL and gRPC'
    inceptionYear = "2025"
    url = "https://github.com/p14n/postevent/"
    licenses {
      license {
        name = 'MIT License'
        url = 'https://opensource.org/licenses/MIT'
      }
    }
    developers {
      developer {
       id = 'p14n'
       name = 'Dean Chapman'
       email = 'dean@p14n.com'
      }
    }
    scm {
      connection = 'scm:git:git://github.com/p14n/postevent.git'
      developerConnection = 'scm:git:ssh://github.com:p14n/postevent.git'
      url = 'https://github.com/p14n/postevent'
    }
  }
}